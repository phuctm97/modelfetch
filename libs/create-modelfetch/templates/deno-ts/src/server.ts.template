import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { z } from "zod";

import denoJson from "../deno.json" with { type: "json" };

const server = new McpServer({
  title: "<%= projectTitle %>",
  name: denoJson.name,
  version: denoJson.version,
});

// Example tool: Roll dice
server.registerTool(
  "roll_dice",
  {
    title: "Roll Dice",
    description: "Rolls an N-sided dice",
    inputSchema: { sides: z.number().int().min(2) },
  },
  ({ sides }) => ({
    content: [
      {
        type: "text",
        text: `ðŸŽ² You rolled a ${1 + Math.floor(Math.random() * sides)}!`,
      },
    ],
  }),
);

// Example resource: Get current time
server.registerResource(
  "time_current",
  "time://current",
  {
    title: "Current Time",
    description: "Get the current time in ISO format",
  },
  async () => {
    const now = new Date();
    return {
      contents: [
        {
          uri: "time://current",
          mimeType: "text/plain",
          text: `Current time: ${now.toISOString()}`,
        },
      ],
    };
  },
);

// Example prompt: Generate greeting
server.registerPrompt(
  "greeting",
  {
    title: "Greeting Generator",
    description: "Generate a personalized greeting",
    argsSchema: {
      name: z.string().describe("Name of the person to greet"),
      style: z.enum(["formal", "casual"]).optional().describe("Style of greeting"),
    },
  },
  ({ name, style = "casual" }) => {
    const greeting = style === "formal" 
      ? `Good day, ${name}. How may I assist you today?`
      : `Hey ${name}! What's up?`;
    
    return {
      messages: [
        {
          role: "user",
          content: {
            type: "text",
            text: greeting,
          },
        },
      ],
    };
  },
);

export default server;